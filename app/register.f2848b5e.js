function e(e,t,r,a){Object.defineProperty(e,t,{get:r,set:a,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},a={},s=t.parcelRequire98c7;null==s&&((s=function(e){if(e in r)return r[e].exports;if(e in a){var t=a[e];delete a[e];var s={id:e,exports:{}};return r[e]=s,t.call(s.exports,s,s.exports),s.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){a[e]=t},t.parcelRequire98c7=s),s.register("fDite",(function(t,r){e(t.exports,"state",(()=>n)),e(t.exports,"getCountries",(()=>i)),e(t.exports,"adminGetData",(()=>o)),e(t.exports,"adminRevokeCar",(()=>c)),e(t.exports,"adminReturnCar",(()=>d)),e(t.exports,"suspendCar",(()=>l)),e(t.exports,"activateCar",(()=>f)),e(t.exports,"deleteCustomer",(()=>h)),e(t.exports,"getStatus",(()=>u)),e(t.exports,"adminGetPayments",(()=>p)),e(t.exports,"addCar",(()=>y)),e(t.exports,"getData",(()=>w)),e(t.exports,"addFavorite",(()=>v)),e(t.exports,"removeFavorite",(()=>b)),e(t.exports,"pickCar",(()=>m)),e(t.exports,"revokeCar",(()=>_)),e(t.exports,"returnCar",(()=>E)),e(t.exports,"reserveCar",(()=>R)),e(t.exports,"getPayments",(()=>S)),e(t.exports,"makePayment",(()=>g)),e(t.exports,"signIn",(()=>x)),e(t.exports,"register",(()=>C)),e(t.exports,"signOut",(()=>T));var a=s("7PUg4");const n={cars:[],reserved:[],rented:[],filters:[],users:[],daily:[],payments:[],reservations:[],userFilters:{type:[],transmission:[],brand:[],color:[],powertrain:[],seating:1,region:"",range:[],year:0}},i=async()=>{try{const e=await fetch("https://restcountries.com/v3.1/all");if(!e.ok)throw new Error;const t=await e.json(),r=[];return t.forEach((e=>{"Israel"!==e.name.common&&r.push({name:e.name.common,cca2:e.cca2,cca3:e.cca3})})),r.sort(((e,t)=>e.name.localeCompare(t.name))),r}catch(e){console.error(e)}},o=async()=>{try{const e=await fetch(`${a.SERVER_URL}/adminData`);if(!e.ok)throw new Error;const t=await e.json(),r=t.reservations;n.cars=[...t.cars.filter((e=>!t.reservations.some((t=>t.car_id===e.car_id&&"active"===t.res_status)))),...t.reservations.filter((e=>"active"===e.res_status))],n.users=t.users,n.reservations=t.reservations,n.reserved=r.filter((e=>"reserved"===e.status)),n.rented=r.filter((e=>"rented"===e.status)),n.filters=t.filters,k("all"),k("reserved"),k("rented")}catch(e){console.error(e)}},c=async function(e,t){try{if(!(await fetch(`${a.SERVER_URL}/revokeCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e,order:t})})).ok)throw new Error;let r=n.cars.findIndex((t=>t.car_id===e));return-1!=r&&(n.cars.splice(r,1),r=n.reservations.findIndex((e=>e.res_id===t)),-1!=r&&(n.reservations[r].status="active",n.reservations[r].res_status="revoked",n.cars.push(n.reservations[r]),r=n.reserved.findIndex((t=>t.car_id===e)),-1!=r&&(n.reserved[r].status="active",k("all"),k("reserved"),!0)))}catch(e){return!1}},d=async function(e,t,r){const s=new Date,i=`${s.getFullYear()}-${s.getMonth()+1}-${s.getDate()}`;try{if(!(await fetch(`${a.SERVER_URL}/returnCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e,order:t,cust:r,date:i})})).ok)throw new Error;let s=n.cars.findIndex((t=>t.car_id===e));return-1!=s&&(n.cars.splice(s,1),s=n.reservations.findIndex((e=>e.res_id===t)),-1!=s&&(n.reservations[s].status="active",n.reservations[s].res_status="returned",n.cars.push(n.reservations[s]),s=n.rented.findIndex((t=>t.car_id===e)),-1!=s&&(n.rented[s].status="active",k("all"),k("rented"),!0)))}catch(e){return!1}},l=async function(e){try{if(!(await fetch(`${a.SERVER_URL}/suspendCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})})).ok)throw new Error;const t=n.cars.find((t=>t.car_id===e));if(!t)return;return t.status="oos",!0}catch(e){return!1}},f=async function(e){try{if(!(await fetch(`${a.SERVER_URL}/activateCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})})).ok)throw new Error;const t=n.cars.find((t=>t.car_id===e));if(!t)return;return t.status="active",!0}catch(e){return!1}},h=async function(e){try{if(!(await fetch(`${a.SERVER_URL}/deleteCustomer`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})})).ok)throw new Error;const t=n.users.findIndex((t=>t.customer_id===e));if(-1===t)return;return n.users.splice(t,1),!0}catch(e){return!1}},u=async function(e){try{const t=await fetch(`${a.SERVER_URL}/daily`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({date:e})});if(!t.ok)throw new Error;const r=await t.json();n.daily=r.data}catch(e){return!1}},p=async function(e){try{const t=await fetch(`${a.SERVER_URL}/dailyPayments`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({period:e})});if(!t.ok)throw new Error;const r=await t.json();null!==r[0].date&&(n.payments=r)}catch(e){return!1}},y=async function(e){try{const t=await fetch(`${a.SERVER_URL}/addCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){const e=await t.text();throw new Error(e)}return await o(),!0}catch(e){return!1}},w=async()=>{try{const e=await fetch(`${a.SERVER_URL}/data`),t=await e.json(),r=t.data,s=t.name;if(!e.ok){const t=await e.text();throw new Error(t)}return n.cars=r.cars,n.favourites=r.favs,n.rented=r.reservations.filter((e=>"rented"===e.status)),n.reserved=r.reservations.filter((e=>"reserved"===e.status)),n.filters=r.filters,k("all"),k("reserved"),k("rented"),k(),s}catch(e){return console.error(e),!1}},v=async e=>{try{const t=await fetch(`${a.SERVER_URL}/addFavourite`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!t.ok){const e=await t.text();throw new Error(e)}let r=n.cars.find((t=>t.car_id===e));if(r||(r=n.reserved.find((t=>t.car_id===e))),r||(r=n.rented.find((t=>t.car_id===e))),!r)throw new Error("Cannot find car");return n.favourites.push(r),k(),[!0,"Car added to favorites successfully"]}catch(e){return[!1,e.message]}},b=async e=>{try{const t=await fetch(`${a.SERVER_URL}/removeFavourite`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!t.ok){const e=await t.text();throw new Error(e)}const r=n.favourites.findIndex((t=>t.car_id===e));if(-1===r)throw new Error("Cannot find car");return n.favourites.splice(r,1),k(),[!0,"Car removed from favorites successfully"]}catch(e){return[!1,e.message]}},m=async function(e){const t=n.reserved.findIndex((t=>t.car_id===e));if(-1==t)return[!1,"Cannot find car"];const r=new Date(n.reserved[t].pick_date);if((new Date).getTime()<r.getTime())return[!1,"Cannot pick-up car before pick-up date"];try{const r=await fetch(`${a.SERVER_URL}/pickCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!r.ok){const e=await r.text();throw new Error(e)}n.reserved[t].status="rented",n.rented.push(n.reserved[t]);const s=n.favourites.findIndex((t=>t.car_id===e));return s>-1&&(n.favourites.splice(s,1),n.favourites.push(n.reserved[t]),k()),n.reserved.splice(t,1),k("rented"),k("reserved"),[!0,"Car picked successfully"]}catch(e){return[!1,e.message]}},_=async function(e,t){const r=n.reserved.findIndex((t=>t.car_id===e));if(-1==r)return[!1,"Cannot find car"];try{const s=await fetch(`${a.SERVER_URL}/revokeCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({order:t,id:e})});if(!s.ok){const e=await s.text();throw new Error(e)}n.reserved[r].status="active",n.reserved[r].res_id="",n.reserved[r].pick_date="",n.reserved[r].drop_date="",n.reserved[r].date="",n.reserved[r].customer_Id="",n.reserved[r].pick_place="",n.reserved[r].drop_place="",n.cars.push(n.reserved[r]);const i=n.favourites.findIndex((t=>t.car_id===e));return i>-1&&(n.favourites.splice(i,1),n.favourites.push(n.reserved[r]),k()),n.reserved.splice(r,1),k("all"),k("reserved"),[!0,"Car revoked successfully"]}catch(e){return[!1,e.message]}},E=async function(e,t){const r=n.rented.findIndex((t=>t.car_id===e));if(-1==r)return[!1,"Cannot find car"];const s=new Date;try{const i=await fetch(`${a.SERVER_URL}/returnCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({order:t,id:e,date:`${s.getFullYear()}-${s.getMonth()+1}-${s.getDate()}`})});if(!i.ok){const e=await i.text();throw new Error(e)}n.rented[r].status="active",n.rented[r].res_id="",n.rented[r].pick_date="",n.rented[r].drop_date="",n.rented[r].date="",n.rented[r].customer_Id="",n.rented[r].pick_place="",n.rented[r].drop_place="",n.cars.push(n.rented[r]);const o=n.favourites.findIndex((t=>t.car_id===e));return o>-1&&(n.favourites.splice(o,1),n.favourites.push(n.rented[r]),k()),n.rented.splice(r,1),k("all"),k("rented"),[!0,"Car returned successfully"]}catch(e){return[!1,e.message]}},R=async function(e,t){const r=n.cars.findIndex((t=>t.car_id===e.car_id));if(-1==r)return[!1,"Cannot find car"];const s=Math.ceil(Math.abs(new Date(e.drop_date)-new Date(e.pick_date))/864e5);if(s<0||s>45)return[!1,"Period must be between 1 and 30 days"];const i=new Date;e.date=`${i.getFullYear()}-${i.getMonth()+1}-${i.getDate()}`;try{const t=await fetch(`${a.SERVER_URL}/reserveCar`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:e})});if(!t.ok){const e=await t.text();throw new Error(e)}const s=await t.json();n.cars[r].status="reserved",n.cars[r].pick_date=e.pick_date,n.cars[r].drop_date=e.drop_date,n.cars[r].pick_place=e.pick_place,n.cars[r].drop_place=e.drop_place,n.cars[r].date=e.date,n.cars[r].res_id=s,n.reserved.push(n.cars[r]),k("all"),k("reserved");const i=n.favourites.findIndex((t=>t.car_id===e.car_id));return i>-1&&(n.favourites.splice(i,1),n.favourites.push(n.cars[r]),k()),n.cars.splice(r,1),[!0,"Car reserved successfully"]}catch(e){return[!1,e.message]}},S=async function(){try{const e=await fetch(`${a.SERVER_URL}/payments`);if(!e.ok){const t=await e.text();throw new Error(t)}const t=await e.json();return n.payments=t,!0}catch(e){return!1}},g=async function(e,t,r){try{const s=await fetch(`${a.SERVER_URL}/pay`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({order:e,id:t,method:r})});if(!s.ok){const e=await s.text();throw new Error(e)}return[!0,"Payment made successfully"]}catch(e){return[!1,e.message]}},x=async function(e){try{if(!(await fetch(`${a.SERVER_URL}/signIn`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok)throw new Error;return!0}catch(e){return!1}},C=async function(e){try{if(!(await fetch(`${a.SERVER_URL}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok)throw new Error;return!0}catch(e){return!1}},T=async function(){try{if(!(await fetch(`${a.SERVER_URL}/signOut`,{method:"POST"})).ok)throw new Error;return window.location=`${a.SERVER_URL}/`,!0}catch(e){return!1}},k=function(e){"all"===e&&n.cars&&n.cars.sort(((e,t)=>e.brand.localeCompare(t.brand))),e="reserved",n.reserved&&n.reserved.sort(((e,t)=>e.brand.localeCompare(t.brand))),e="rented",n.rented&&n.rented.sort(((e,t)=>e.brand.localeCompare(t.brand)))}})),s.register("7PUg4",(function(t,r){e(t.exports,"SERVER_URL",(()=>a)),e(t.exports,"CAR_HEAD",(()=>s)),e(t.exports,"CUSTOMER_HEAD",(()=>n)),e(t.exports,"RESERVATIONS_HEAD",(()=>i)),e(t.exports,"STATUS_HEAD",(()=>o)),e(t.exports,"PAYMENTS_HEAD",(()=>c));const a="http://localhost:3306",s='\n            <th class="table-field">#</th>\n            <th class="table-field">ID</th>\n            <th class="table-field">Brand</th>\n            <th class="table-field">Model</th>\n            <th class="table-field">Plate number</th>\n            <th class="table-field">Type</th>\n            <th class="table-field">year</th>\n            <th class="table-field">seating</th>\n            <th class="table-field">transmission</th>\n            <th class="table-field">rate/day</th>\n            <th class="table-field">region</th>\n            <th class="table-field">powertrain</th>\n            <th class="table-field">color</th>\n            <th class="table-field">status</th>\n            <th class="table-field">actions</th>\n          ',n='\n            <th class="table-field">#</th>\n            <th class="table-field">ID</th>\n            <th class="table-field">first name</th>\n            <th class="table-field">last name</th>\n            <th class="table-field">email</th>\n            <th class="table-field">region</th>\n            <th class="table-field">phone number</th>\n            <th class="table-field">license number</th>\n            <th class="table-field">actions</th>\n          ',i='\n            <th class="table-field">#</th>\n            <th class="table-field">res. number</th>\n            <th class="table-field">car id</th>\n            <th class="table-field">cust. id</th>\n            <th class="table-field">brand</th>\n            <th class="table-field">model</th>\n            <th class="table-field">plate Number</th>\n            <th class="table-field">region</th>\n            <th class="table-field">rate/day</th>\n            <th class="table-field">pick-up date</th>\n            <th class="table-field">drop-off date</th>\n            <th class="table-field">order date</th>\n            <th class="table-field">car status</th>\n            <th class="table-field">status</th>\n            <th class="table-field">Info</th>\n          ',o='\n            <th class="table-field">#</th>\n            <th class="table-field">car id</th>\n            <th class="table-field">brand</th>\n            <th class="table-field">model</th>\n            <th class="table-field">plate Number</th>\n            <th class="table-field">region</th>\n            <th class="table-field">rate/day</th>\n            <th class="table-field">status</th>\n            <th class="table-field">info</th>\n          ',c='\n            <th class="table-field">#</th>\n            <th class="table-field">Date</th>\n            <th class="table-field">number of transactions</th>\n            <th class="table-field">total amount</th>\n          '}));
//# sourceMappingURL=register.f2848b5e.js.map
